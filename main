#!/usr/bin/env node
'use strict';

var resolve = require('json-refs').resolveRefs;
var YAML = require('js-yaml');
var fs = require('fs');

var program = require('commander');

program
  .version(JSON.parse(require('fs').readFileSync(
    require.main.filename.match(/^(.+)\/.+$/)[1] + '/package.json')).version)
  .option('-b --base-file [input]',
          'base yaml file (Default is base.yaml)',
          'base.yaml')
  .option('-o --output-file [output]',
          'output yaml file (Default is swagger.yaml)',
          'swagger.yaml')
  .option('--openapi [version]',
          'openApi version (Default is 3.0.2)',
          '3.0.2')
  .usage('[options] <yaml file ...>')
  .parse(process.argv);

const pOptions = program.opts();

const file = pOptions.baseFile;
const filePath = file.replace(/\w+?\.yaml$/,"")

const swagger_object = { openapi: pOptions.openapi };
if (!fs.existsSync(file)) {
  console.error(`File does not exist. (${file})`);
  process.exit(1);
}
var root = YAML.load(fs.readFileSync(file).toString());
var options = {
  filter: ['relative', 'remote'],
  loaderOptions: {
    processContent: (res, callback) => {
      callback(null, YAML.load(res.text));
    }
  }
};
Object.assign(swagger_object, root);
process.chdir(filePath);
resolve(swagger_object, options).then(results => {
  const yamlString = YAML.dump(results.resolved)
    .replace(/\n( *)'(\/.+?)':\n/g, '\n$1$2:\n')
    .replace(/>-\n */g, '');
  fs.writeFileSync(pOptions.outputFile, yamlString, 'utf8', e => {
    if (e) {
      console.log(e.message);
      process.exit(1);
    }
  });
});
